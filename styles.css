/* Global Styles */
body, html {
  margin: 0;
  padding: 0;
  height: 100%;
  overflow: hidden;
  background-color: white;
}

/*
html, body, #contentLayer, #container {
  outline: 10px solid red;
}
*/

/* Hide scrollbar for all browsers but keep scrolling */
#contentLayer {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

#contentLayer::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}


body.dark-mode {
  background-color: #000000; /* Dark background for scrolling area */
}

body.cursor-enabled img,
body.cursor-enabled .spawned-image {
  cursor: pointer !important;
}

/*
.hide-for-export {
  display: none !important;
}
*/

:root {
  --color1: black;
  --color2: white;
  --accent: magenta;
  --text: var(--color1);
}

.pause-animations * {
  animation: none !important;
  transition: none !important;
}

/* Container for Images */
#container {
  position: relative;
  width: 100%;
  min-height: 100vh;
  overflow: visible;
}

img {
  position: absolute;
  will-change: transform;
}

body.blur-on img,
body.blur-on .spawned-image {
  cursor: pointer !important;
}


/* Popup Styles */
#popup {
  position: fixed;
  top: 30px;
  left: 30px;
  width: 120px;
  border-radius: 15px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  background-color: var(--color1);
  padding: 20px;
  padding-top: 50px;
  /* box-shadow: 0 0 15px rgba(255, 255, 255, 0.2); */
  opacity: 1;
  z-index: 3;
  pointer-events: auto;
  transform-origin: top left;
}

#popup.hidden {
  opacity: 0;
  pointer-events: none;
}

#popup2 {
  position: fixed;
  top: 30px;
  left: 210px; /* popup + egy kis távolság */
  width: 260px;
  border-radius: 15px;
  border: 1px solid rgba(0,0,0, 0.2);
  background-color: var(--color2);
  color: var(--color1);
  padding: 20px;
  padding-top: 10px;
  /* box-shadow: 0 0 15px rgba(255, 255, 255, 0.2); */
  opacity: 1;
  z-index: 1;
  pointer-events: auto;
  transform-origin: top left;
  line-height: 1.3rem;
}

#popup2.hidden {
  opacity: 0;
  pointer-events: none;
}

/* Hidden Class */
.hidden {
  display: none;
}

/* Dark Mode */
.dark-mode #contentLayer {
  filter: invert(1);
  background-color: #ffffff; /* Optional: Set background for dark mode */
}

/* Keep popups and menus in normal color space */
#uiLayer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  pointer-events: none; /* Let children handle events if needed */
}

#contentLayer {
  position: relative;
  width: 100%;
  min-height: 100vh;
  height: auto;
  overflow-x: hidden;
  overflow-y: auto;
  background-color: transparent;
  z-index: 0;
}





/* Menu Styles */
#menuWrapper {
  position: fixed;
  top: 35px;
  left: 35px;
  pointer-events: auto;
  z-index: 1000;
  filter: none !important; /* Prevent invert from applying to it */
}

#menuWrapper label,
#menuWrapper input[type="range"] {
  font-family: Helvetica, Arial, sans-serif;
  color: var(--color2);
}

#menuWrapper input[type="range"] {
  padding: 10px 0;
}

#menuWrapper div {
  font-family: Helvetica, Arial, sans-serif;
  font-size: 13px; /* Adjust size if needed */
}

/* Menu Button Styles */
#menuButton {
  width: 25px;
  height: 25px;
  background-color: transparent;
  border: 1.5px solid rgba(0,0,0, 0.0);
  border-radius: 50%;
  cursor: pointer;
  transition: background 0.3s, color 0.3s, opacity 0.3s;
  z-index: 1001;
  position: relative;

  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 4px;
}

#menuButton:hover {
  background-color: transparent;
  border: 1.5px solid rgba(0,0,0, 0.0);
}

#menuButton.active {
  background-color: transparent;
  border: 1.5px solid rgba(0,0,0, 0.0);
}

#menuButton.active:hover {
  background-color: transparent;
  border: 1.5px solid rgba(0,0,0, 0.0);
}

#menuButton .line {
  display: block;
  width: 14px;
  height: 2px;
  background-color: var(--accent);
  transition: transform 0.3s ease, opacity 0.3s ease;
}

#menuButton.active .top {
  transform: rotate(45deg) translate(2px, 2px);
}
#menuButton.active .bottom {
  transform: rotate(-45deg) translate(2px, -2px);
}


.dark-mode #menuButton,
.dark-mode #menuButton:hover,
.dark-mode #menuButton.active {
  filter: none !important;
}


/* POPUP2 BUTTON*/
#popup2-close-button {
  width: 25px;
  height: 25px;
  background-color: rgba(0,0,0, 0.0);
  border: 1.5px solid rgba(0,0,0, 0.0);
  border-radius: 50%;
  cursor: pointer;
  position: fixed;
  top: 35px;
  left: 215px;
  z-index: 2;

  display: none;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 4px;

  transition: background-color 0.3s;
}

#popup2-close-button.show {
  display: flex;
}

#popup2-close-button:hover {
  background-color: transparent;
}

#popup2-close-button:not(.active) {
  border: 1.5px solid rgba(0,0,0, 0.0);
  background-color: transparent;
}

#popup2-close-button:not(.active):hover {
  background-color: transparent;
}

#popup2-close-button .line {
  display: block;
  width: 14px;
  height: 2px;
  background-color: var(--accent);
  transition: transform 0.3s ease, opacity 0.3s ease;
}

#popup2-close-button .top {
  transform: rotate(45deg) translate(2px, 2px);
}

#popup2-close-button .bottom {
  transform: rotate(-45deg) translate(2px, -2px);
}

#popup2-close-button.active .top {
  transform: rotate(45deg) translate(2px, 2px);
}

#popup2-close-button.active .bottom {
  transform: rotate(-45deg) translate(2px, -2px);
}




/* Spawn Slider Styles */
#spawnSpeedSlider {
  -webkit-appearance: none;
  appearance: none;
  background: transparent; /* Make base background transparent so track pseudo works */
  cursor: pointer;
  padding: 0;
  max-width: 100%;
  min-width: 100%;
  display: block;
  margin: 0 auto; /* Center horizontally */
  margin-top: 6px;
  margin-bottom: 18px;
}

/* Webkit track (Chrome, Safari) */
#spawnSpeedSlider::-webkit-slider-runnable-track {
  height: 4px;
  background: var(--color2);
  border-radius: 2px;
}

/* Webkit thumb (the draggable circle) */
#spawnSpeedSlider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 16px;
  height: 16px;
  background: var(--accent);
  border-radius: 50%;
  margin-top: -6px; /* Center the thumb on the track */
}

/* Firefox track */
#spawnSpeedSlider::-moz-range-track {
  height: 4px;
  background: var(--color2);
  border-radius: 2px;
}

/* Firefox thumb */
#spawnSpeedSlider::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background: var(--accent);
  border-radius: 50%;
  border: none;
}

/* Optional: Hide default focus outline */
#spawnSpeedSlider:focus {
  outline: none;
}



/* Scroll Slider Styles */
#scrollSpeedSlider {
  -webkit-appearance: none;
  appearance: none;
  background: transparent; /* Make base background transparent so track pseudo works */
  cursor: pointer;
  padding: 0;
  max-width: 100%;
  min-width: 100%;
  display: block;
  margin: 0 auto; /* Center horizontally */
  margin-top: 6px;
  margin-bottom: 18px;
}

/* Webkit track (Chrome, Safari) */
#scrollSpeedSlider::-webkit-slider-runnable-track {
  height: 4px;
  background: var(--color2);
  border-radius: 2px;
}

/* Webkit thumb (the draggable circle) */
#scrollSpeedSlider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 16px;
  height: 16px;
  background: var(--accent);
  border-radius: 50%;
  margin-top: -6px; /* Center the thumb on the track */
}

/* Firefox track */
#scrollSpeedSlider::-moz-range-track {
  height: 4px;
  background: var(--color2);
  border-radius: 2px;
}

/* Firefox thumb */
#scrollSpeedSlider::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background: var(--accent);
  border-radius: 50%;
  border: none;
}

/* Optional: Hide default focus outline */
#scrollSpeedSlider:focus {
  outline: none;
}



/* Save Button Styles */
#save-pdf {
  padding: 10px 20px;
  width: 100%;
  margin-bottom: 10px;
  font-size: 13px;
  font-family: Helvetica, Arial, sans-serif;
  background: var(--color2);
  color: var(--text);
  border: 0 solid;
  border-radius: 10px;
  cursor: pointer;
  z-index: 1001;
  transition: background 0.3s, color 0.3s;
}

#save-pdf:hover {
  background: var(--accent);
  color: white;
}

/* Switch Container for Toggles */
.switch {
  margin-top: 10px;
  margin-bottom: 7px;
  position: relative;
  display: inline-block;
  width: 50px;
  height: 26px;
}

/* Slider Style */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color2);
  transition: 0.4s;
  border-radius: 50px; /* Rounded corners */
}

/* Circle inside the slider */
.slider:before {
  content: "";
  position: absolute;
  height: 16px;
  width: 16px;
  border-radius: 50%;
  left: 5px;
  bottom: 5px;
  background-color: var(--accent);
  transition: 0.4s;
}


/* Thumb color when checkbox is checked */
input:checked + .slider:before {
  background-color: var(--color2); /* Blue when on */
}

/* Background when checkbox is checked */
input:checked + .slider {
  background-color: var(--accent);
}

/* Move the slider circle when checked */
input:checked + .slider:before {
  transform: translateX(24px); /* Moves the circle to the right */
}

/* Hide the checkbox */
.switch input {
  display: none;
}

/* Menu Container Styles */
#menuContainer {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999; /* Ensure it stays on top */
  pointer-events: none; /* Let children handle interaction */
}



/* Style the container of the checkbox */
.checkbox-container {
  display: flex;
  align-items: center; /* Vertically align the checkbox and text */
  gap: 8px; /* Space between checkbox and label */
  margin-top: 10px;
  font-size: 12px; /* Make the text 12px */
}

/* Hide the default checkbox */
.checkbox-container input[type="checkbox"] {
  display: none;
}

/* Style the label to hold the circle and text */
.checkbox-container label {
  display: flex;
  align-items: center; /* Vertically align the circle and text */
  gap: 8px; /* Space between the circle and the text */
  cursor: pointer;
  position: relative; /* To position the dot */
}

/* Create the custom circle for the checkbox */
.checkbox-container label::before {
  content: '';
  width: 26px;
  height: 26px;
  border-radius: 50%;
  background-color: white; /* Default background color of the circle */
  position: relative;
  transition: background-color 0.2s ease, border-color 0.2s ease;
  z-index: 1; /* Ensure the circle stays below the dot */
}

/* Change background color to red when checked */
.checkbox-container input[type="checkbox"]:checked + label::before {
  background-color: var(--accent); /* Background color of circle when checked */
}

/* Add a small blue dot in the center when checked */
.checkbox-container input[type="checkbox"]:checked + label::after {
  content: '';
  position: absolute;
  top: 5px; /* Centered vertically in the circle */
  left: 5px; /* Centered horizontally in the circle */
  width: 16px; /* Smaller dot size */
  height: 16px; /* Smaller dot size */
  background-color: white; /* Dot color */
  border-radius: 50%;
  z-index: 2; /* Ensure the dot appears on top of the circle */
}

/* Ensure the text inside the label is aligned properly */
.checkbox-container label span {
  font-size: 12px;
  vertical-align: middle; /* Align text vertically */
}

body:not(.cursor-enabled) img,
body:not(.cursor-enabled) .spawned-image {
  cursor: default !important;
}